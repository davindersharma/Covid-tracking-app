{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","Container","Grid","container","spacing","justify","item","component","Card","xs","md","cx","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","xc","url","fetchData","country","a","changeableUrl","axios","get","modifiData","fatchDailyData","modifiedData","map","dailydata","total","date","reportDate","console","log","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fatchedData","setState","this","images","src","coronaImages","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.020e295d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Cards_Container__5ZIIs\",\"Card\":\"Cards_Card__1CzjW\",\"infected\":\"Cards_infected__2ftjV\",\"recovered\":\"Cards_recovered__2o8gv\",\"deaths\":\"Cards_deaths__1eqNP\"};","import React from \"react\";\r\nimport styles from \"./Cards.module.css\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"loding...\";\r\n  }\r\n  return (\r\n    <div className={styles.Container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.Card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Numbber of Active Cases of Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xc={12}\r\n          md={3}\r\n          className={cx(styles.Card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Numbber of Recovered Cases Because of Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xc={12}\r\n          md={3}\r\n          className={cx(styles.Card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Numbber of Deaths Caused by Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl=`${url}/countries/${country}`\r\n  }\r\n  try {\r\n    const { data } = await axios.get(changeableUrl);\r\n\r\n    const modifiData = {\r\n      deaths: data.deaths,\r\n      confirmed: data.confirmed,\r\n      recovered: data.recovered,\r\n      lastUpdate: data.lastUpdate,\r\n    };\r\n    return modifiData;\r\n  } catch (error) {}\r\n};\r\nexport const fatchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailydata) => ({\r\n      confirmed: dailydata.confirmed.total,\r\n      deaths: dailydata.deaths.total,\r\n      date: dailydata.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const countries = async () => {\r\n  try {\r\n    const { data: countries } = await axios.get(`${url}/countries`);\r\n\r\n    // console.log(countries.countries.map((country) => country.name));\r\n\r\n    return countries.countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fatchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from './Chart.module.css'\r\n// import { red } from \"@material-ui/core/colors\";\r\nconst Chart = ({data:{recovered,confirmed,deaths},country}) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fatchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  },[]);\r\n\r\n  const lineChart = (dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          }\r\n        ],\r\n      }}\r\n    />\r\n  ) : null);\r\n  // console.log(confirmed, recovered, deaths)\r\n  const barChart = (\r\n    \r\n     confirmed ?\r\n      (\r\n        <Bar\r\n          data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [{\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255,0, 0.5)', 'rgba(255, 0,0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value]\r\n              \r\n              \r\n            }]\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: { display: true, text:`current State in ${country}`},\r\n          }}\r\n\r\n        />\r\n      ) : null\r\n  );\r\n  return <div className={styles.container}>\r\n    {country ? barChart : lineChart}\r\n    </div>;\r\n};\r\n\r\n    \r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { countries } from \"../../api\";\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await countries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"global\" value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n \r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport Chart from \"./components/Chart/Chart\";\r\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\nimport coronaImages from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fatchedData = await fetchData();\r\n    this.setState({ data: fatchedData });\r\n  }\r\n  handleCountryChange = async (country) => {\r\n    const fatchedData = await fetchData(country);\r\n    console.log(fatchedData);\r\n    \r\n    //fetch data \r\n    //set state\r\n    this.setState({ data: fatchedData, country:country});\r\n\r\n  }\r\n  render() {\r\n    const { data,country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.images}src={coronaImages} alt=\"covid-19\"/>\r\n        <Cards data={data} country={country}/>\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart className={styles.container} data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__twRB_\",\"images\":\"App_images__2Wodt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2Fsmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2poJT\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}